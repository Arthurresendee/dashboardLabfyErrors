[
  {
    "workflow_id": "PppAWVnvdf8YYOeX",
    "execution_id": "123483",
    "error_type": "n8n-nodes-base.if",
    "severity": null,
    "suggested_fix": null,
    "error_timestamp": "2025-07-22T17:19:36.243Z",
    "execution_mode": "webhook",
    "full_error_data": {
      "execution": {
        "id": "123483",
        "url": "https://webhook.autommatic.com.br/workflow/PppAWVnvdf8YYOeX/executions/123483",
        "error": {
          "level": "error",
          "tags": {},
          "cause": {
            "options": {
              "caseSensitive": true,
              "leftValue": "",
              "typeValidation": "strict",
              "version": 2
            },
            "conditions": [
              {
                "id": "abcf6908-fd50-4974-8f30-bb82718011e7",
                "leftValue": "={{ $json.mensagemDoBot }",
                "rightValue": "",
                "operator": {
                  "type": "boolean",
                  "operation": "true",
                  "singleValue": true
                }
              }
            ],
            "combinator": "and"
          },
          "description": "Try changing the type of comparison. Alternatively you can enable 'Convert types where required'.",
          "context": {
            "itemIndex": 0
          },
          "node": {
            "parameters": {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "abcf6908-fd50-4974-8f30-bb82718011e7",
                    "leftValue": "={{ $json.mensagemDoBot }",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "looseTypeValidation": false,
              "options": {}
            },
            "type": "n8n-nodes-base.if",
            "typeVersion": 2.2,
            "position": [7360, -1180],
            "id": "87397a91-db87-4f3d-a692-764c20456e08",
            "name": "Verifica se a mensagem é do agente1"
          },
          "message": "invalid syntax",
          "stack": "Error: invalid syntax\n    at Expression.renderExpression (/usr/local/lib/node_modules/n8n/node_modules/.pnpm/n8n-workflow@file+packages+workflow/node_modules/n8n-workflow/src/expression.ts:335:36)\n    at Expression.resolveSimpleParameterValue (/usr/local/lib/node_modules/n8n/node_modules/.pnpm/n8n-workflow@file+packages+workflow/node_modules/n8n-workflow/src/expression.ts:310:28)\n    at resolveParameterValue (/usr/local/lib/node_modules/n8n/node_modules/.pnpm/n8n-workflow@file+packages+workflow/node_modules/n8n-workflow/src/expression.ts:502:16)\n    at Expression.getParameterValue (/usr/local/lib/node_modules/n8n/node_modules/.pnpm/n8n-workflow@file+packages+workflow/node_modules/n8n-workflow/src/expression.ts:559:22)\n    at resolveParameterValue (/usr/local/lib/node_modules/n8n/node_modules/.pnpm/n8n-workflow@file+packages+workflow/node_modules/n8n-workflow/src/expression.ts:486:17)\n    at /usr/local/lib/node_modules/n8n/node_modules/.pnpm/n8n-workflow@file+packages+workflow/node_modules/n8n-workflow/src/expression.ts:542:5\n    at Array.map (<anonymous>)\n    at Expression.getParameterValue (/usr/local/lib/node_modules/n8n/node_modules/.pnpm/n8n-workflow@file+packages+workflow/node_modules/n8n-workflow/src/expression.ts:541:38)\n    at resolveParameterValue (/usr/local/lib/node_modules/n8n/node_modules/.pnpm/n8n-workflow@file+packages+workflow/node_modules/n8n-workflow/src/expression.ts:486:17)\n    at Expression.getParameterValue (/usr/local/lib/node_modules/n8n/node_modules/.pnpm/n8n-workflow@file+packages+workflow/node_modules/n8n-workflow/src/expression.ts:559:22)\n    at ExecuteContext._getNodeParameter (/usr/local/lib/node_modules/n8n/node_modules/.pnpm/n8n-core@file+packages+core_openai@4.103.0_encoding@0.1.13_ws@8.17.1_zod@3.25.67_/node_modules/n8n-core/src/execution-engine/node-execution-context/node-execution-context.ts:367:37)\n    at ExecuteContext.getNodeParameter (/usr/local/lib/node_modules/n8n/node_modules/.pnpm/n8n-core@file+packages+core_openai@4.103.0_encoding@0.1.13_ws@8.17.1_zod@3.25.67_/node_modules/n8n-core/src/execution-engine/node-execution-context/execute-context.ts:126:9)\n    at /usr/local/lib/node_modules/n8n/node_modules/.pnpm/n8n-nodes-base@file+packages+nodes-base_@aws-sdk+credential-providers@3.808.0_asn1.js@5_1af219c3f47f2a1223ec4ccec249a974/node_modules/n8n-nodes-base/nodes/If/V2/IfV2.node.ts:96:18\n    at Array.forEach (<anonymous>)\n    at ExecuteContext.execute (/usr/local/lib/node_modules/n8n/node_modules/.pnpm/n8n-nodes-base@file+packages+nodes-base_@aws-sdk+credential-providers@3.808.0_asn1.js@5_1af219c3f47f2a1223ec4ccec249a974/node_modules/n8n-nodes-base/nodes/If/V2/IfV2.node.ts:88:23)\n    at WorkflowExecute.runNode (/usr/local/lib/node_modules/n8n/node_modules/.pnpm/n8n-core@file+packages+core_openai@4.103.0_encoding@0.1.13_ws@8.17.1_zod@3.25.67_/node_modules/n8n-core/src/execution-engine/workflow-execute.ts:1194:32)\n    at /usr/local/lib/node_modules/n8n/node_modules/.pnpm/n8n-core@file+packages+core_openai@4.103.0_encoding@0.1.13_ws@8.17.1_zod@3.25.67_/node_modules/n8n-core/src/execution-engine/workflow-execute.ts:1564:38\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at /usr/local/lib/node_modules/n8n/node_modules/.pnpm/n8n-core@file+packages+core_openai@4.103.0_encoding@0.1.13_ws@8.17.1_zod@3.25.67_/node_modules/n8n-core/src/execution-engine/workflow-execute.ts:2135:11"
        },
        "lastNodeExecuted": "Verifica se a mensagem é do agente1",
        "mode": "webhook"
      },
      "workflow": {
        "id": "PppAWVnvdf8YYOeX",
        "name": "[LabFy] arthur(teste)"
      }
    },
    "last_execution_node": "Verifica se a mensagem é do agente1",
    "workflow": "[LabFy] arthur(teste)",
    "node": "Verifica se a mensagem é do agente1",
    "error_message": "invalid syntax",
    "stack_trace": "Error: invalid syntax\n    at Expression.renderExpression (/usr/local/lib/node_modules/n8n/node_modules/.pnpm/n8n-workflow@file+packages+workflow/node_modules/n8n-workflow/src/expression.ts:335:36)\n    ...",
    "id": "4",
    "created_at": "2025-07-22T17:19:36.421Z"
  },
  {
    "id": "5",
    "workflow": "[LabFy] arthur(teste)",
    "node": "Pega memoria 3",
    "error_message": "invalid syntax",
    "stack_trace": "NodeOperationError: invalid syntax at ExecuteContext.execute...",
    "created_at": "2025-07-22T17:24:43.266Z",
    "workflow_id": "PppAWVnvdf8YYOeX",
    "execution_id": "123540",
    "error_type": "n8n-nodes-base.redis",
    "severity": null,
    "suggested_fix": null,
    "error_timestamp": "2025-07-22T17:24:43.213Z",
    "execution_mode": "webhook",
    "full_error_data": {
      "execution": {
        "id": "123540",
        "url": "https://webhook.autommatic.com.br/workflow/PppAWVnvdf8YYOeX/executions/123540",
        "error": {
          "level": "warning",
          "description": "NodeOperationError: invalid syntax",
          "message": "invalid syntax"
        },
        "lastNodeExecuted": "Pega memoria 3",
        "mode": "webhook"
      },
      "workflow": {
        "id": "PppAWVnvdf8YYOeX",
        "name": "[LabFy] arthur(teste)"
      }
    }
  },
  {
    "id": "6",
    "workflow": "[LabFy] arthur(teste)",
    "node": "Redis",
    "error_message": "invalid syntax",
    "stack_trace": "NodeOperationError: invalid syntax at ExecuteContext.execute...",
    "created_at": "2025-07-22T17:29:16.581Z",
    "workflow_id": "PppAWVnvdf8YYOeX",
    "execution_id": "123552",
    "error_type": "n8n-nodes-base.redis",
    "severity": null,
    "suggested_fix": null,
    "error_timestamp": "2025-07-22T17:29:16.523Z",
    "execution_mode": "webhook",
    "full_error_data": {
      "execution": {
        "id": "123552",
        "url": "https://webhook.autommatic.com.br/workflow/PppAWVnvdf8YYOeX/executions/123552",
        "error": {
          "level": "warning",
          "description": "NodeOperationError: invalid syntax",
          "message": "invalid syntax"
        },
        "lastNodeExecuted": "Redis",
        "mode": "webhook"
      },
      "workflow": {
        "id": "PppAWVnvdf8YYOeX",
        "name": "[LabFy] arthur(teste)"
      }
    }
  },
  {
    "id": "7",
    "workflow": "[LabFy] arthur(teste)",
    "node": "Redis",
    "error_message": "invalid syntax",
    "stack_trace": "NodeOperationError: invalid syntax at ExecuteContext.execute...",
    "created_at": "2025-07-22T17:33:35.594Z",
    "workflow_id": "PppAWVnvdf8YYOeX",
    "execution_id": "123555",
    "error_type": "n8n-nodes-base.redis",
    "severity": null,
    "suggested_fix": null,
    "error_timestamp": "2025-07-22T17:33:35.525Z",
    "execution_mode": "webhook",
    "full_error_data": {
      "execution": {
        "id": "123555",
        "url": "https://webhook.autommatic.com.br/workflow/PppAWVnvdf8YYOeX/executions/123555",
        "error": {
          "level": "warning",
          "description": "NodeOperationError: invalid syntax",
          "message": "invalid syntax"
        },
        "lastNodeExecuted": "Redis",
        "mode": "webhook"
      },
      "workflow": {
        "id": "PppAWVnvdf8YYOeX",
        "name": "[LabFy] arthur(teste)"
      }
    }
  }
] 